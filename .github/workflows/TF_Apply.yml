on:
  workflow_call:
    inputs:
      ENV:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

env:
  GITHUB_TOKEN: ${{ secrets.APP_TOKEN }}
jobs: 
  Terraform_Plan:
    name: "Terraform_Apply"
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENV }}

    outputs:
      tfplanExitCode: ${{ steps.plan.outputs.TFPlanExitCode }}    

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::033614065377:role/TF_Github_Action
          role-session-name: samplerolesession
          aws-region: us-east-1

      - name: Terraform init
        id: init
        run: terraform init -upgrade -backend-config=${{ inputs.ENV }}.hcl

      - uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.ENV }}-tfplan
          path: ${{ github.workspace }}

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: 1229947
          private-key: ${{ secrets.APP_PEM_KEY }}
          owner: maheshreddysiddamurthi

      - name: GITHUB_TOKEN
        run: |
          echo "GITHUB_TOKEN=${{ steps.app-token.outputs.token }}"  >> $GITHUB_ENV   

      - name: "Terraform Apply"
        id: apply
        env:
         GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          terraform apply -no-color -auto-approve -input=false ${{ github.workspace }}/tfplan